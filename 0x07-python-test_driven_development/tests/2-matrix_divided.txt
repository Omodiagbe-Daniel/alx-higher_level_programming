The "2-matrix_didived module"
=========================================

Using the 2-matrix_divided module

----------------------------------------

Importing the 2-matrix_divided module:

>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Test if matrix is not a list:
>>> matrix_divided(4, 2)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

Test if element in matrix is not a list:
>>> matrix_divided([[1, 3], 5], 3)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

Test if element is a list of list but not int or float:
>>> matrix_divided([['a', 'b'], ['c', 'd']], 5)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

Test if element is a list of lists containing int or float:
>>> matrix_divided([[5, 6], [6, 7]], 2)
[[2.5, 3.0], [3.0, 3.5]]

Test if div is a number:
>>> matrix_divided([[5, 6], [6, 7]], 'a')
Traceback (most recent call last):
...
TypeError: div must be a number

Test if 0 is as div:
>>> matrix_divided([[5, 6], [6, 7]], 0)
Traceback (most recent call last):
...
ZeroDivisionError: division by zero
